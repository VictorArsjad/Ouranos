{"version":3,"file":"extension.js","mappings":"0GAAA,eACA,SAEMA,EAAO,KACZ,EAAAC,OAAOC,uBAAuB,wBAkDlB,EAAAC,SAAW,CACvB,CACCC,QAAS,eACTC,QAASL,GAEV,CACCI,QAAS,mBACTC,QAASL,GAEV,CACCI,QAAS,0BACTC,QA1DsB,KACvB,MAAMC,EAAgB,EAAAL,OAAOM,iBAC7B,IAAKD,EAEJ,YADA,EAAAL,OAAOO,iBAAiB,mCAIzB,MAAMC,EAAkBH,EAAcI,SAASC,SAC/C,KAAK,IAAAC,gBAAeH,GAEnB,YADA,EAAAR,OAAOO,iBAAiB,uDAGzB,KAAI,IAAAK,kBAAiBJ,GAEpB,YADA,EAAAR,OAAOO,iBAAiB,0BAIzB,MAAMM,EAAiBR,EAAcS,UAAUC,OAAOC,KAAQ,EACxDC,GAAU,IAAAC,YAAWV,IAC3B,IAAAW,iBAAgBF,IAChB,IAAAG,OAAM,uBAAuBZ,KAAmBK,MAChD,IAAAQ,UAuCA,CACClB,QAAS,yBACTC,QAtCqB,KACtB,MAAMC,EAAgB,EAAAL,OAAOM,iBAC7B,IAAKD,EAEJ,YADA,EAAAL,OAAOO,iBAAiB,mCAIzB,MAAMC,EAAkBH,EAAcI,SAASC,SAC/C,KAAK,IAAAC,gBAAeH,GAEnB,YADA,EAAAR,OAAOO,iBAAiB,uDAGzB,KAAI,IAAAK,kBAAiBJ,GAEpB,YADA,EAAAR,OAAOO,iBAAiB,0BAIzB,MAAMU,GAAU,IAAAC,YAAWV,IAC3B,IAAAW,iBAAgBF,IAChB,IAAAG,OAAM,uBAAuBZ,MAC7B,IAAAa,Y,wJCnDD,eAcA,SAASC,IACR,OAAO,EAAAtB,OAAOuB,gBAAkB,EAAAvB,OAAOwB,iBAbxC,0BAA+BC,GAC9B,OAAOA,EAASC,SAAS,WAG1B,4BAAiCD,GAChC,OAAOA,EAASE,SAAS,cAG1B,sBAA2BF,GAC1B,OAAOA,EAASG,QAAQ,WAAY,KAOrC,2BAAgCC,GACdP,IACRQ,SAAS,MAAMD,MAGzB,iBAAsB1B,GACJmB,IACRQ,SAAS3B,IAGnB,kBACkBmB,IACRD,S,QC9BVU,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCrBf,eACA,QAEA,oBAAyBQ,GACxB,IAAK,IAAIC,KAAO,EAAAvC,SAAU,CACzB,MAAMwC,EAAaC,EAAOzC,SAAS0C,gBAClCH,EAAItC,QACJsC,EAAIrC,SAELoC,EAAQK,cAAcC,KAAKJ,KAI7B,2B","sources":["webpack://ouranos/./src/commands.ts","webpack://ouranos/./src/utils.ts","webpack://ouranos/external commonjs \"vscode\"","webpack://ouranos/webpack/bootstrap","webpack://ouranos/./src/extension.ts"],"sourcesContent":["import { window } from \"vscode\";\nimport { changeDirectory, getAppName, isElixirTestFile, isInTestFolder, print, show } from \"./utils\";\n\nconst ping = () => {\n\twindow.showInformationMessage(\"Hello from Ouranos!\");\n};\n\nconst runTestInCursor = () => {\n\tconst focusedEditor = window.activeTextEditor;\n\tif (!focusedEditor) {\n\t\twindow.showErrorMessage(`Ouranos: Not a valid test file.`);\n\t\treturn\n\t}\n\n\tconst focusedFilename = focusedEditor.document.fileName;\n\tif (!isInTestFolder(focusedFilename)) {\n\t\twindow.showErrorMessage(`Ouranos: Not a valid test file. Not in test folder.`)\n\t\treturn\n\t}\n\tif(!isElixirTestFile(focusedFilename)) {\n\t\twindow.showErrorMessage(`Not a valid test file.`)\n\t\treturn\n\t}\n\n\tconst cursorPosition = focusedEditor.selection.active.line  + 1\n\tconst appName = getAppName(focusedFilename)\n\tchangeDirectory(appName)\n\tprint(`mix test --no-start ${focusedFilename}:${cursorPosition}`);\n\tshow();\n};\n\nconst runTestsInFile = () => {\n\tconst focusedEditor = window.activeTextEditor;\n\tif (!focusedEditor) {\n\t\twindow.showErrorMessage(`Ouranos: Not a valid test file.`);\n\t\treturn\n\t}\n\n\tconst focusedFilename = focusedEditor.document.fileName;\n\tif (!isInTestFolder(focusedFilename)) {\n\t\twindow.showErrorMessage(`Ouranos: Not a valid test file. Not in test folder.`)\n\t\treturn\n\t}\n\tif(!isElixirTestFile(focusedFilename)) {\n\t\twindow.showErrorMessage(`Not a valid test file.`)\n\t\treturn\n\t}\n\n\tconst appName = getAppName(focusedFilename)\n\tchangeDirectory(appName)\n\tprint(`mix test --no-start ${focusedFilename}`);\n\tshow();\n}\n\nexport const commands = [\n\t{\n\t\tcommand: \"ouranos.ping\",\n\t\thandler: ping,\n\t},\n\t{\n\t\tcommand: \"ouranos.navigate\",\n\t\thandler: ping,\n\t},\n\t{\n\t\tcommand: \"ouranos.runTestInCursor\",\n\t\thandler: runTestInCursor,\n\t},\n\t{\n\t\tcommand: \"ouranos.runTestsInFile\",\n\t\thandler: runTestsInFile,\n\t},\n];\n","import { window } from \"vscode\";\n\nexport function isInTestFolder(filename: string) {\n\treturn filename.includes(\"/test/\");\n}\n\nexport function isElixirTestFile(filename: string) {\n\treturn filename.endsWith(\"_test.exs\");\n}\n\nexport function getAppName(filename: string) {\n\treturn filename.replace(/test\\/.*/, \"\");\n}\n\nfunction getTerminal() {\n\treturn window.activeTerminal || window.createTerminal();\n}\n\nexport function changeDirectory(location: string) {\n\tconst terminal = getTerminal();\n\tterminal.sendText(`cd ${location}`);\n}\n\nexport function print(command: string) {\n\tconst terminal = getTerminal();\n\tterminal.sendText(command);\n}\n\nexport function show() {\n\tconst terminal = getTerminal();\n\tterminal.show();\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from \"vscode\";\nimport { commands } from \"./commands\";\n\nexport function activate(context: vscode.ExtensionContext) {\n\tfor (let obj of commands) {\n\t\tconst disposable = vscode.commands.registerCommand(\n\t\t\tobj.command,\n\t\t\tobj.handler\n\t\t);\n\t\tcontext.subscriptions.push(disposable);\n\t}\n}\n\nexport function deactivate() {}\n"],"names":["ping","window","showInformationMessage","commands","command","handler","focusedEditor","activeTextEditor","showErrorMessage","focusedFilename","document","fileName","isInTestFolder","isElixirTestFile","cursorPosition","selection","active","line","appName","getAppName","changeDirectory","print","show","getTerminal","activeTerminal","createTerminal","filename","includes","endsWith","replace","location","sendText","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","obj","disposable","vscode","registerCommand","subscriptions","push"],"sourceRoot":""}